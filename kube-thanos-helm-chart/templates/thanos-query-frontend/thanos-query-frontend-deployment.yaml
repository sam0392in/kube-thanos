{{- if .Values.queryfrontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: thanos-queryfrontend
    app.kubernetes.io/name: "{{- include "thanos.fullname" . }}-queryfrontend"
    {{- include "thanos.commonlabels" . | nindent 4 }}
  name: "{{- include "thanos.fullname" . }}-queryfrontend"
spec:
  replicas: {{ .Values.queryfrontend.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: thanos-queryfrontend
      app.kubernetes.io/name: "{{- include "thanos.fullname" . }}-queryfrontend"
  template:
    metadata:
      labels:
        app.kubernetes.io/component: thanos-queryfrontend
        app.kubernetes.io/name: "{{- include "thanos.fullname" . }}-queryfrontend"
        {{- include "thanos.commonlabels" . | nindent 8 }}
    spec:
      {{- if .Values.queryfrontend.affinity }}
      affinity: 
      {{- .Values.queryfrontend.affinity | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.queryfrontend.tolerations }}
      tolerations: 
      {{- .Values.queryfrontend.tolerations | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.queryfrontend.topologySpreadConstraints }}
      topologySpreadConstraints:
      {{- .Values.queryfrontend.topologySpreadConstraints | toYaml | nindent 8 }}
      {{- end }}
      containers:
      - args:
        {{- range $key, $value := .Values.queryfrontend.args }}
        - {{ $value }}
        {{- end }}
        - |-
          --query-range.response-cache-config="config":
            "addresses":
            - "dnssrv+_client._tcp.<MEMCACHED_SERVICE>.thanos.svc.cluster.local"
            "dns_provider_update_interval": "10s"
            "max_async_buffer_size": 10000
            "max_async_concurrency": 20
            "max_get_multi_batch_size": 0
            "max_get_multi_concurrency": 100
            "max_idle_connections": 100
            "timeout": "500ms"
          "type": "memcached"
        - |-
          --labels.response-cache-config="config":
            "addresses":
            - "dnssrv+_client._tcp.<MEMCACHED_SERVICE>.thanos.svc.cluster.local"
            "dns_provider_update_interval": "10s"
            "max_async_buffer_size": 10000
            "max_async_concurrency": 20
            "max_get_multi_batch_size": 0
            "max_get_multi_concurrency": 100
            "max_idle_connections": 100
            "timeout": "500ms"
          "type": "memcached"
        - |-
          --tracing.config="config":
            "sampler_param": 2
            "sampler_type": "ratelimiting"
            "service_name": "thanos-query_frontend"
          "type": "JAEGER"
        resources:
        {{- .Values.queryfrontend.resources | toYaml | nindent 10 }}
        env:
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: "{{ .Values.global.image.repository }}:{{ .Chart.AppVersion }}"
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /-/healthy
            port: 9090
            scheme: HTTP
          periodSeconds: 30
        name: thanos-queryfrontend
        ports:
        - containerPort: 9090
          name: http
        readinessProbe:
          failureThreshold: 20
          httpGet:
            path: /-/ready
            port: 9090
            scheme: HTTP
          periodSeconds: 5
        terminationMessagePolicy: FallbackToLogsOnError
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
      serviceAccountName: thanos-queryfrontend
      terminationGracePeriodSeconds: 120
{{- end }}